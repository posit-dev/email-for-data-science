{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# The whole game\n",
        "\n",
        "<!-- \n",
        "* Preview of nice email result\n",
        "* Connecting to gmail\n",
        "* Writing the email content\n",
        "* Sending the email\n",
        "* Content: Sending a fancier email\n",
        "* Configuring: subject and attachments\n",
        "* Orchestration: testing email \n",
        "-->\n",
        "\n",
        "Emailing reports is a critical but challenging task for data science.\n",
        "Mainly because you have to figure out generating the email content, configuring pieces like attachments, and orchestrating it (e.g. testing, or sending on a schedule). Moreover, content can range from simple layouts to more complex ones.\n",
        "\n",
        "In this tutorial, we'll walk through the whole game of sending email. We'll start with this simple example:\n"
      ],
      "id": "e23a4943"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# | code-fold: true\n",
        "# | eval: false\n",
        "import os\n",
        "from dotenv import load_dotenv\n",
        "from data_polars import sp500\n",
        "import redmail\n",
        "\n",
        "load_dotenv()\n",
        "gmail_address = os.environ[\"GMAIL_ADDRESS\"]\n",
        "gmail_app_password = os.environ[\"GMAIL_APP_PASSWORD\"]\n",
        "\n",
        "\n",
        "email_subject = \"Report on Cars\"\n",
        "email_body = sp500.head(10).style.as_raw_html(inline_css=True)\n",
        "\n",
        "# This is here to emphasize the sender does not have to be the same as the receiver\n",
        "email_receiver = gmail_address\n",
        "\n",
        "redmail.gmail.username = gmail_address\n",
        "redmail.gmail.password = gmail_app_password\n",
        "\n",
        "redmail.gmail.send(\n",
        "    subject=email_subject,\n",
        "    receivers=[email_receiver],\n",
        "    html=email_body,\n",
        ")"
      ],
      "id": "0c2962ac",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "![](./assets/whole-game-email-annotated.png){width=50% fig-align=\"center\"}\n",
        "\n",
        "* **Content**: writing the text of the email, including plots and tables.\n",
        "* **Composing**: setting up the subject, sender, and receivers.\n",
        "* **Orchestrating**: previewing, testing, and scheduling the email.\n",
        "\n",
        "We'll also quickly review writing more advanced content layouts, and authoring email reports that involve running code with Quarto.\n",
        "\n",
        "## A simple email\n",
        "\n",
        "![](./assets/whole-game-email.png){width=50% fig-align=\"center\"}\n",
        "\n",
        "* Generate and preview\n",
        "* Authenticate (may need to refer to its own authentication page in guide)\n",
        "* Send\n"
      ],
      "id": "42715cd2"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# | code-fold: true\n",
        "# | eval: false\n",
        "import os\n",
        "from dotenv import load_dotenv\n",
        "from data_polars import sp500\n",
        "import redmail\n",
        "\n",
        "load_dotenv()\n",
        "gmail_address = os.environ[\"GMAIL_ADDRESS\"]\n",
        "gmail_app_password = os.environ[\"GMAIL_APP_PASSWORD\"]\n",
        "\n",
        "\n",
        "email_subject = \"Report on Cars\"\n",
        "email_body = sp500.head(10).style.as_raw_html(inline_css=True)\n",
        "\n",
        "# This is here to emphasize the sender does not have to be the same as the receiver\n",
        "email_receiver = gmail_address\n",
        "\n",
        "redmail.gmail.username = gmail_address\n",
        "redmail.gmail.password = gmail_app_password\n",
        "\n",
        "redmail.gmail.send(\n",
        "    subject=email_subject,\n",
        "    receivers=[email_receiver],\n",
        "    html=email_body,\n",
        ")"
      ],
      "id": "b18f6823",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Configure: subject, recipients, attachments\n",
        "\n",
        "* you could attach the data as a CSV attachment\n",
        "\n",
        "\n",
        "## Orchestrate: save and preview\n",
        "\n",
        "* previewing email\n",
        "* intermediate json, easy for sending email later\n",
        "* embedding images makes previewing hard\n",
        "* can always email to yourself (or use a test service like Litmus)\n",
        "\n",
        "## Content: Quarto authoring\n",
        "\n",
        "Here's our same simple email generated using quarto.\n",
        "\n",
        "\n",
        "\n",
        "![](./assets/whole-game-quarto.png){width=50% fig-align=\"center\"}\n",
        "\n",
        "* Focused on basic configuring, and content\n",
        "* Sending happens via our tool\n",
        "* Generate using quarto render\n",
        "* Can preview email\n",
        "\n",
        "## Content: advanced layouts\n",
        "\n",
        "We'll highlight the key pieces (discussed later in this guide) to go from that simple email, to a more advanced on like below:\n",
        "\n",
        "![](./assets/whole-game-fancy.png){width=50% fig-align=\"center\"}\n",
        "\n",
        "\n",
        "## Fridge\n",
        "\n",
        "In this tutorial, we are going to send an email from a Gmail account. To do so, you will need to [create an App Password](https://support.google.com/accounts/answer/185833). Note this is only possible if you've [enabled 2-step verification](https://support.google.com/accounts/answer/185839).\n",
        "\n",
        "<!--\n",
        "I'm hestitant to directly put links like this: https://myaccount.google.com/apppasswords\n",
        "Because it will instantly prompt the user to login to their gmail account, which might feel sketchy on a webpage from an unknown url.\n",
        "-->\n",
        "\n",
        "::: {.callout-tip}\n",
        "This is just one of many options: it is also possible to send emails in Python from other email providers (Outlook, ProtonMail, etc.), or even from a custom domain. To skip ahead to a discussion of alternative sending methods, see [Authentication](orchestrating-auth.qmd)\n",
        ":::\n",
        "\n",
        "Once you've created your App Password, that is used as your Gmail password for sending with Python. \n",
        "\n",
        "There are many ways to store the password seperate from your email-sending code, so as to not expose any sensitive information. One such approach uses a `.env` file, and the ``dotenv` and `os` packages.\n",
        "\n",
        "```{.sh filename=\".env\"}\n",
        "GMAIL_APP_PASSWORD=abcd abcd abcd abcd\n",
        "```\n",
        "\n",
        "```{.python filename=\"main.py\"}\n",
        "import os\n",
        "from dotenv import load_dotenv\n",
        "\n",
        "load_dotenv()\n",
        "\n",
        "your_gmail_address = \"YourGmail@gmail.com\"\n",
        "gmail_app_password = os.environ[\"GMAIL_APP_PASSWORD\"]\n",
        "```\n",
        "\n",
        "Check out the email content we will send.\n"
      ],
      "id": "e40499c1"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "from data_polars import sp500\n",
        "\n",
        "sp500.head(10).style"
      ],
      "id": "60ababf8",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "And now we send the email!\n"
      ],
      "id": "14aeb803"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# | eval: false\n",
        "import redmail\n",
        "\n",
        "redmail.gmail.username = your_gmail_address\n",
        "redmail.gmail.password = gmail_app_password\n",
        "\n",
        "redmail.gmail.send(\n",
        "    subject=\"An Example Email\",\n",
        "    receivers=[username],\n",
        "    html=email_html,\n",
        "    text=email_plaintext,\n",
        ")"
      ],
      "id": "402bc819",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "<!-- \n",
        "Explain why email_plaintext is there?\n",
        "-->"
      ],
      "id": "658bb6d8"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/jules-wg/Library/Python/3.9/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}